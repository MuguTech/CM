// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: octopus_osi.proto

#include "octopus_osi.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace octopus {
PROTOBUF_CONSTEXPR SimData::SimData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.frames_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SimDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimDataDefaultTypeInternal() {}
  union {
    SimData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimDataDefaultTypeInternal _SimData_default_instance_;
}  // namespace octopus
static ::_pb::Metadata file_level_metadata_octopus_5fosi_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_octopus_5fosi_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_octopus_5fosi_2eproto = nullptr;

const uint32_t TableStruct_octopus_5fosi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::octopus::SimData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::octopus::SimData, _impl_.frames_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::octopus::SimData)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::octopus::_SimData_default_instance_._instance,
};

const char descriptor_table_protodef_octopus_5fosi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021octopus_osi.proto\022\007octopus\032\020osi_common"
  ".proto\032\025osi_groundtruth.proto\",\n\007SimData"
  "\022!\n\006frames\030\001 \003(\0132\021.osi3.GroundTruthb\006pro"
  "to3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_octopus_5fosi_2eproto_deps[2] = {
  &::descriptor_table_osi_5fcommon_2eproto,
  &::descriptor_table_osi_5fgroundtruth_2eproto,
};
static ::_pbi::once_flag descriptor_table_octopus_5fosi_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_octopus_5fosi_2eproto = {
    false, false, 123, descriptor_table_protodef_octopus_5fosi_2eproto,
    "octopus_osi.proto",
    &descriptor_table_octopus_5fosi_2eproto_once, descriptor_table_octopus_5fosi_2eproto_deps, 2, 1,
    schemas, file_default_instances, TableStruct_octopus_5fosi_2eproto::offsets,
    file_level_metadata_octopus_5fosi_2eproto, file_level_enum_descriptors_octopus_5fosi_2eproto,
    file_level_service_descriptors_octopus_5fosi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_octopus_5fosi_2eproto_getter() {
  return &descriptor_table_octopus_5fosi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_octopus_5fosi_2eproto(&descriptor_table_octopus_5fosi_2eproto);
namespace octopus {

// ===================================================================

class SimData::_Internal {
 public:
};

void SimData::clear_frames() {
  _impl_.frames_.Clear();
}
SimData::SimData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:octopus.SimData)
}
SimData::SimData(const SimData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SimData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.frames_){from._impl_.frames_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:octopus.SimData)
}

inline void SimData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.frames_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SimData::~SimData() {
  // @@protoc_insertion_point(destructor:octopus.SimData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SimData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.frames_.~RepeatedPtrField();
}

void SimData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SimData::Clear() {
// @@protoc_insertion_point(message_clear_start:octopus.SimData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.frames_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SimData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .osi3.GroundTruth frames = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_frames(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SimData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:octopus.SimData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .osi3.GroundTruth frames = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_frames_size()); i < n; i++) {
    const auto& repfield = this->_internal_frames(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:octopus.SimData)
  return target;
}

size_t SimData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:octopus.SimData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osi3.GroundTruth frames = 1;
  total_size += 1UL * this->_internal_frames_size();
  for (const auto& msg : this->_impl_.frames_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SimData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SimData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SimData::GetClassData() const { return &_class_data_; }


void SimData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SimData*>(&to_msg);
  auto& from = static_cast<const SimData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:octopus.SimData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.frames_.MergeFrom(from._impl_.frames_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SimData::CopyFrom(const SimData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:octopus.SimData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimData::IsInitialized() const {
  return true;
}

void SimData::InternalSwap(SimData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.frames_.InternalSwap(&other->_impl_.frames_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SimData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_octopus_5fosi_2eproto_getter, &descriptor_table_octopus_5fosi_2eproto_once,
      file_level_metadata_octopus_5fosi_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace octopus
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::octopus::SimData*
Arena::CreateMaybeMessage< ::octopus::SimData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::octopus::SimData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
