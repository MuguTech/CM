/**
 *  @file   2022.03.10
 *  @author LX
 *  @brief  V2x Description 
 */ 
#if 0

#ifndef V2xDescription_h
#define V2xDescription_h

#include <string.h>
#include <string>
#include <iostream>
#include "SensorDescription.h"
#include <map>
#include <vector>

using namespace std;

//数据打包格式
enum E_DATA_PROTOCOL
{
    DataProtocolDefault,
    DataProtocolProtobuf,
    DataProtocolJson,
    DataProtocolXML
};

//消息类型
enum E_V2X_MSG_TYPE
{
    BSM,
    RSI,
    RSM,
    MAP,
    SPAT
};

//消息内容
enum E_OPTIONAL_ID
{
    //BSM 消息可选内容
    // BSM_TIMECONFIDENCE,
    // BSM_POS_ELEVATION,
    // BSM_POSACCURACY,
    // BSM_POSCONFIDENCE,
    // BSM_POSCONFIDENCE_ELEVATION,
    // BSM_ANGLE,
    // BSM_MOTIONCFD,
    // BSM_MOTIONCFD_SPEEDCFD,
    // BSM_MOTIONCFD_HEADINGCFD,
    // BSM_MOTIONCFD_STEERCFD,
    // BSM_BRAKES_BRAKEPADEL,
    // BSM_BRAKES_WHEELBRAKES,
    // BSM_BRAKES_TRACTION,
    // BSM_BRAKES_ABS,
    // BSM_BRAKES_SCS,
    // BSM_BRAKES_BRAKEBOOST,
    // BSM_BRAKES_AUXBRAKES,
    // BSM_SIZE_HEIGHT,
    // BSM_VEHICLECLASS_FUELTYPE,
    // BSM_SAFETYEXT,
    // BSM_SAFETYEXT_EVENTS,
    // BSM_SAFETYEXT_PATHHISTORY,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_UTCTIME,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_POS_ELEVATION,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_HEADING,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_TRANSMISSION,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_SPEED,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_POSACCURACY,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_POSCONFIDENCE,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_POSCONFIDENCE_ELEVATION,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_TIMECONFIDENCE,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_MOTIONCFD,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_MOTIONCFD_SPEEDCFD,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_MOTIONCFD_HEADINGCFD,
    // BSM_SAFETYEXT_PATHHISTORY_INITIALPOSITION_MOTIONCFD_STEERCFD,
    // BSM_SAFETYEXT_PATHHISTORY_CURRGNSSSTATUS,
    // BSM_SAFETYEXT_PATHHISTORY_CRUMBDATA,
    // BSM_SAFETYEXT_PATHHISTORY_CRUMBDATA_LLVOFFSET_OFFSETV,
    // BSM_SAFETYEXT_PATHHISTORY_CURMBDATA_SPEED,
    // BSM_SAFETYEXT_PATHHISTORY_CRUMBDATA_POSACCURACY,
    // BSM_SAFETYEXT_PATHHISTORY_CURMBDATA_POSACCURACY_ELEVATION,
    // BSM_SAFETYEXT_PATHHISTORY_CURMBDATA_HEADING,
    // BSM_SAFETYEXT_PATHPREDICTION,
    // BSM_SAFETYEXT_LIGHTS,
    // BSM_EMERGENCYEXT,
    // BSM_EMERGENCYEXT_RESPONSETYPE,
    // BSM_EMERGENCYEXT_SIRENUSE,
    // BSM_EMERGENCYEXT_LIGHTSUSE,

    // //MAP 消息可选内容
    // MAP_TIMESTAMP,
    // MAP_NODES_NAME,
    // MAP_NODES_ID_REGION,
    // MAP_NODES_REFPOS_ELEVATION,
    // MAP_NODES_INLINKS,
    // MAP_NODES_INLINKS_NAME,
    // MAP_NODES_INLINKS_UPSTREAMNODEID_REGION,
    // MAP_NODES_INLINKS_SPEEDLIMITS,
    // MAP_NODES_INLINKS_LINKWIDTH,
    // MAP_NODES_INLINKS_POINTS,
    // MAP_NODES_INLINKS_POINTS_POSOFFSET_OFFSETV,
    // MAP_NODES_INLINKS_MOVEMENTS,
    // MAP_NODES_INLINKS_MOVEMENTS_REMOTEINTERSECTION_REGION,
    // MAP_NODES_INLINKS_MOVEMENTS_PHASEID,
    // MAP_NODES_INLINKS_LANES_LANEWIDTH,
    // MAP_NODES_INLINKS_LANES_LANEATTRIBUTES,
    // MAP_NODES_INLINKS_LANES_LANEATTRIBUTES_SHAREWITH,
    // MAP_NODES_INLINKS_LANES_MANEUVERS,
    // MAP_NODES_INLINKS_LANES_CONNECTSTO,
    // MAP_NODES_INLINKS_LANES_CONNECTSTO_REMOTEINTERSECTION_REGION,
    // MAP_NODES_INLINKS_LANES_CONNECTSTO_CONNECTINGLANE,
    // MAP_NODES_INLINKS_LANES_CONNECTSTO_CONNECTINGLANE_MANEUVER,
    // MAP_NODES_INLINKS_LANES_CONNECTSTO_PHASEID,
    // MAP_NODES_INLINKS_LANES_SPEEDLIMITS,
    // MAP_NODES_INLINKS_LANES_POINTS,
    // MAP_NODES_INLINKS_LANES_POINTS_POSOFFSET_OFFSETV,

    // //RSI消息可选内容
    // RSI_MOY,
    // RSI_REFPOS_ELEVATION,
    // RSI_RTES,
    // RSI_RTES_EVENTPOS,
    // RSI_RTES_EVENTPOS_OFFSETV,
    // RSI_RTES_EVENTRADIUS,
    // RSI_RTES_DESCRIPTION,
    // RSI_RTES_TIMEDETAILS,
    // RSI_RTES_TIMEDETAILS_STARTTIME,
    // RSI_RTES_TIMEDETAILS_ENDTIME,
    // RSI_RTES_TIMEDETAILS_ENDTIMECONFIDENCE,
    // RSI_RTES_PRIORITY,
    // RSI_RTES_REFERENCEPATHS,
    // RSI_RTES_REFERENCEPATHS_ACTIVEPATH_OFFSETV,
    // RSI_RTES_REFERENCELINKS,
    // RSI_RTES_REFERENCELINKS_UPSTREAMNODEID_REGION,
    // RSI_RTES_REFERENCELINKS_DOWNSTREAMNODEID_REGION,
    // RSI_RTES_REFERENCELINKS_REFERENCELANES,
    // RSI_RTES_EVENTCONFIDENCE,
    // RSI_RTSS,
    // RSI_RTSS_SIGNPOS,
    // RSI_RTSS_SIGNPOS_OFFSETV,
    // RSI_RTSS_DESCRIPTION,
    // RSI_RTSS_TIMEDETAILS,
    // RSI_RTSS_TIMEDETAILS_STARTTIME,
    // RSI_RTSS_TIMEDETAILS_ENDTIME,
    // RSI_RTSS_TIMEDETAILS_ENDTIMECONFIDENCE,
    // RSI_RTSS_PRIORITY,
    // RSI_RTSS_REFERENCEPATHS,
    // RSI_RTSS_REFERENCEPATHS_ACTIVEPATH_OFFSETV,
    // RSI_RTSS_REFERENCELINKS,
    // RSI_RTSS_REFERENCELINKS_UPSTREAMNODEID,
    // RSI_RTSS_REFERENCELINKS_UPSTREAMNODEID_REGION,
    // RSI_RTSS_REFERENCELINKS_DOWNSTREAMNODEID_REGION,
    // RSI_RTSS_REFERENCELINKS_REFERENCELANES,

    // //RSM消息可选内容
    // RSM_REFPOS_ELEVATION,
    // RSM_PARTICIPANTS_ID,
    // RSM_PARTICIPANTS_POS_OFFSETV,
    // RSM_PARTICIPANTS_POSCONFIDENCE_ELEVATION,
    // RSM_PARTICIPANTS_TRANSMISSION,
    // RSM_PARTICIPANTS_ANGLE,
    // RSM_PARTICIPANTS_MOTIONCFD,
    // RSM_PARTICIPANTS_MOTIONCFD_SPEEDCFD,
    // RSM_PARTICIPANTS_MOTIONCFD_HEADINGCFD,
    // RSM_PARTICIPANTS_MOTIONCFD_STEERCFD,
    // RSM_PARTICIPANTS_ACCELSET,
    // RSM_PARTICIPANTS_SIZE_HEIGHT,
    // RSM_PARTICIPANTS_VEHICLECLASS,
    // RSM_PARTICIPANTS_VEHICLECLASS_FUELTYPE,

    // //SPAT消息可选内容
    // SPAT_MOY,
    // SPAT_TIMESTAMP,
    // SPAT_NAME,
    // SPAT_INTERSECTIONS_INTERSECTIONID_REGION,
    // SPAT_INTERSECTIONS_MOY,
    // SPAT_INTERSECTIONS_TIMESTAMP,
    // SPAT_INTERSECTIONS_TIMECONFIDENCE,
    // SPAT_INTERSECTIONS_PHASES_PHASESTATES_TIMING
};

//开关
enum E_ON_OFF
{
    ON,
    OFF
};

struct V2xDescription : public SensorDescription
{
    V2xDescription(string n = "V2X", E_DATA_PROTOCOL protocol = E_DATA_PROTOCOL::DataProtocolDefault, double communicationDistance = 0.0, int updateRate = 0.0)
    : protocol(protocol),
      communicationDistance(communicationDistance),
      updateRate(updateRate) 
    {
        type = SENSOR_TYPE_V2X;
        strcpy(name, n.c_str()); 
        enable = false;
        sensorOutputType = 0;
#if 1	/* Tang 2022.10.27 一汽一阶段，拆分理想传感器 [start] */
		// 对于V2X传感器，安装位置不会对其获取的信息有影响
		assemblePositionX = 0.0;
		assemblePositionY = 0.0;
		assemblePositionZ = 0.0;
		heading = 0;
		pitch = 0;
		roll = 0;
#endif	/* Tang 2022.10.27 一汽一阶段，拆分理想传感器 [end] */
    }

    // string name; 
   E_DATA_PROTOCOL protocol;
   double communicationDistance;
   int updateRate;
   map<E_V2X_MSG_TYPE, vector<E_OPTIONAL_ID>> msgOption;
#if 1 //hlx 2022.05.17 bug1312
public:
    int size()
    {
        return sizeof(V2xDescription);
    }
#endif
};
#endif
#endif